@charset "UTF-8";
/*
 * Table of contents   Содержание
 *
 *  0. General Vars, Mixins, Extends
 *  1. Header
 *  2. Menu main
 *  3. Slider
 *  4. 

 *  14.
 *
 */
/* 1. Structure elements */
@import url("https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700&subset=cyrillic");
@import url(../fonts/font-awesome/css/all.min.css);
.section {
  width: 100%;
  float: left;
  width: 100%;
  clear: both; }

.container {
  max-width: 1400px;
  padding-left: 15px;
  padding-right: 15px;
  margin: 0 auto;
  box-sizing: border-box;
  position: relative; }

/* 2. Modules display */
/* Block  model */
.row {
  margin-left: -15px;
  margin-right: -15px; }

.row > div {
  float: left; }

/* Inline-block  model */
/* Flex  model */
.row-flex {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px; }

.row-flexbox {
  display: -webkit-box;
  display: flex;
  margin-left: -15px;
  margin-right: -15px; }

[class*=row-flex].middle {
  -webkit-box-align: center;
          align-items: center; }

[class*=row-flex].top {
  -webkit-box-align: start;
          align-items: flex-start; }

[class*=row-flex].bottom {
  -webkit-box-align: end;
          align-items: flex-end; }

[class*=row-flex].baseline {
  -webkit-box-align: baseline;
          align-items: baseline; }

[class*=row-flex].stretch {
  -webkit-box-align: stretch;
          align-items: stretch; }

.row-flex.row-reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
          flex-direction: row-reverse; }

/* 3. Columns */
/* 3. Columns v.2 */
@media (min-width: 320px) {
  .mv_offset_0 {
    margin-left: 0; }
  .mv_1 {
    width: 8.33333%; }
  .mv_offset_1 {
    margin-left: 8.33333%; }
  .mv_2 {
    width: 16.66667%; }
  .mv_offset_2 {
    margin-left: 16.66667%; }
  .mv_3 {
    width: 25%; }
  .mv_offset_3 {
    margin-left: 25%; }
  .mv_4 {
    width: 33.33333%; }
  .mv_offset_4 {
    margin-left: 33.33333%; }
  .mv_5 {
    width: 41.66667%; }
  .mv_offset_5 {
    margin-left: 41.66667%; }
  .mv_6 {
    width: 50%; }
  .mv_offset_6 {
    margin-left: 50%; }
  .mv_7 {
    width: 58.33333%; }
  .mv_offset_7 {
    margin-left: 58.33333%; }
  .mv_8 {
    width: 66.66667%; }
  .mv_offset_8 {
    margin-left: 66.66667%; }
  .mv_9 {
    width: 75%; }
  .mv_offset_9 {
    margin-left: 75%; }
  .mv_10 {
    width: 83.33333%; }
  .mv_offset_10 {
    margin-left: 83.33333%; }
  .mv_11 {
    width: 91.66667%; }
  .mv_offset_11 {
    margin-left: 91.66667%; }
  .mv_12 {
    width: 100%; }
  .mv_offset_12 {
    margin-left: 100%; } }

@media (min-width: 576px) {
  .mh_offset_0 {
    margin-left: 0; }
  .mh_1 {
    width: 8.33333%; }
  .mh_offset_1 {
    margin-left: 8.33333%; }
  .mh_2 {
    width: 16.66667%; }
  .mh_offset_2 {
    margin-left: 16.66667%; }
  .mh_3 {
    width: 25%; }
  .mh_offset_3 {
    margin-left: 25%; }
  .mh_4 {
    width: 33.33333%; }
  .mh_offset_4 {
    margin-left: 33.33333%; }
  .mh_5 {
    width: 41.66667%; }
  .mh_offset_5 {
    margin-left: 41.66667%; }
  .mh_6 {
    width: 50%; }
  .mh_offset_6 {
    margin-left: 50%; }
  .mh_7 {
    width: 58.33333%; }
  .mh_offset_7 {
    margin-left: 58.33333%; }
  .mh_8 {
    width: 66.66667%; }
  .mh_offset_8 {
    margin-left: 66.66667%; }
  .mh_9 {
    width: 75%; }
  .mh_offset_9 {
    margin-left: 75%; }
  .mh_10 {
    width: 83.33333%; }
  .mh_offset_10 {
    margin-left: 83.33333%; }
  .mh_11 {
    width: 91.66667%; }
  .mh_offset_11 {
    margin-left: 91.66667%; }
  .mh_12 {
    width: 100%; }
  .mh_offset_12 {
    margin-left: 100%; } }

@media (min-width: 768px) {
  .tb_offset_0 {
    margin-left: 0; }
  .tb_1 {
    width: 8.33333%; }
  .tb_offset_1 {
    margin-left: 8.33333%; }
  .tb_2 {
    width: 16.66667%; }
  .tb_offset_2 {
    margin-left: 16.66667%; }
  .tb_3 {
    width: 25%; }
  .tb_offset_3 {
    margin-left: 25%; }
  .tb_4 {
    width: 33.33333%; }
  .tb_offset_4 {
    margin-left: 33.33333%; }
  .tb_5 {
    width: 41.66667%; }
  .tb_offset_5 {
    margin-left: 41.66667%; }
  .tb_6 {
    width: 50%; }
  .tb_offset_6 {
    margin-left: 50%; }
  .tb_7 {
    width: 58.33333%; }
  .tb_offset_7 {
    margin-left: 58.33333%; }
  .tb_8 {
    width: 66.66667%; }
  .tb_offset_8 {
    margin-left: 66.66667%; }
  .tb_9 {
    width: 75%; }
  .tb_offset_9 {
    margin-left: 75%; }
  .tb_10 {
    width: 83.33333%; }
  .tb_offset_10 {
    margin-left: 83.33333%; }
  .tb_11 {
    width: 91.66667%; }
  .tb_offset_11 {
    margin-left: 91.66667%; }
  .tb_12 {
    width: 100%; }
  .tb_offset_12 {
    margin-left: 100%; } }

@media (min-width: 1024px) {
  .ds_offset_0 {
    margin-left: 0; }
  .ds_1 {
    width: 8.33333%; }
  .ds_offset_1 {
    margin-left: 8.33333%; }
  .ds_2 {
    width: 16.66667%; }
  .ds_offset_2 {
    margin-left: 16.66667%; }
  .ds_3 {
    width: 25%; }
  .ds_offset_3 {
    margin-left: 25%; }
  .ds_4 {
    width: 33.33333%; }
  .ds_offset_4 {
    margin-left: 33.33333%; }
  .ds_5 {
    width: 41.66667%; }
  .ds_offset_5 {
    margin-left: 41.66667%; }
  .ds_6 {
    width: 50%; }
  .ds_offset_6 {
    margin-left: 50%; }
  .ds_7 {
    width: 58.33333%; }
  .ds_offset_7 {
    margin-left: 58.33333%; }
  .ds_8 {
    width: 66.66667%; }
  .ds_offset_8 {
    margin-left: 66.66667%; }
  .ds_9 {
    width: 75%; }
  .ds_offset_9 {
    margin-left: 75%; }
  .ds_10 {
    width: 83.33333%; }
  .ds_offset_10 {
    margin-left: 83.33333%; }
  .ds_11 {
    width: 91.66667%; }
  .ds_offset_11 {
    margin-left: 91.66667%; }
  .ds_12 {
    width: 100%; }
  .ds_offset_12 {
    margin-left: 100%; } }

@media (min-width: 1440px) {
  .hd_offset_0 {
    margin-left: 0; }
  .hd_1 {
    width: 8.33333%; }
  .hd_offset_1 {
    margin-left: 8.33333%; }
  .hd_2 {
    width: 16.66667%; }
  .hd_offset_2 {
    margin-left: 16.66667%; }
  .hd_3 {
    width: 25%; }
  .hd_offset_3 {
    margin-left: 25%; }
  .hd_4 {
    width: 33.33333%; }
  .hd_offset_4 {
    margin-left: 33.33333%; }
  .hd_5 {
    width: 41.66667%; }
  .hd_offset_5 {
    margin-left: 41.66667%; }
  .hd_6 {
    width: 50%; }
  .hd_offset_6 {
    margin-left: 50%; }
  .hd_7 {
    width: 58.33333%; }
  .hd_offset_7 {
    margin-left: 58.33333%; }
  .hd_8 {
    width: 66.66667%; }
  .hd_offset_8 {
    margin-left: 66.66667%; }
  .hd_9 {
    width: 75%; }
  .hd_offset_9 {
    margin-left: 75%; }
  .hd_10 {
    width: 83.33333%; }
  .hd_offset_10 {
    margin-left: 83.33333%; }
  .hd_11 {
    width: 91.66667%; }
  .hd_offset_11 {
    margin-left: 91.66667%; }
  .hd_12 {
    width: 100%; }
  .hd_offset_12 {
    margin-left: 100%; } }

/* 
@function set_container_max_width($max_width) {

    .container{
        max-width: map-get($device_obj, container_max)+px;
    }

    @return 1;
}
 */
[class*="hd_"],
[class*="ds_"],
[class*="tb_"],
[class*="mh_"],
[class*="mv_"] {
  box-sizing: border-box;
  padding-left: 15px;
  padding-right: 15px;
  position: relative;
  min-height: 1px; }

/* 4. Вспомогательные структурные элементы */
.container:before,
.container:after,
.row:before,
.row:after {
  display: table;
  content: " ";
  box-sizing: border-box; }

.container:after,
.row:after {
  clear: both; }

/* 4. Утилиты адаптации  */
/* Скрываем на больших, на малых показываем */
@media (min-width: 320px) {
  body .mv_hidden {
    display: none; } }

@media (max-width: 319px) {
  body .mv_visible {
    display: none; } }

@media (min-width: 576px) {
  body .mh_hidden {
    display: none; } }

@media (max-width: 575px) {
  body .mh_visible {
    display: none; } }

@media (min-width: 768px) {
  body .tb_hidden {
    display: none; } }

@media (max-width: 767px) {
  body .tb_visible {
    display: none; } }

@media (min-width: 1024px) {
  body .ds_hidden {
    display: none; } }

@media (max-width: 1023px) {
  body .ds_visible {
    display: none; } }

@media (min-width: 1440px) {
  body .hd_hidden {
    display: none; } }

@media (max-width: 1439px) {
  body .hd_visible {
    display: none; } }

/* 5. Text utulites  */
.lefted {
  text-align: left; }

.righted {
  text-align: right; }

.centered {
  text-align: center; }

.justifyed {
  text-align: justify; }

@media (min-width: 320px) {
  .mv_lefted {
    text-align: left; }
  .mv_righted {
    text-align: right; }
  .mv_centered {
    text-align: center; }
  .mv_justifyed {
    text-align: justify; } }

@media (min-width: 576px) {
  .mh_lefted {
    text-align: left; }
  .mh_righted {
    text-align: right; }
  .mh_centered {
    text-align: center; }
  .mh_justifyed {
    text-align: justify; } }

@media (min-width: 768px) {
  .tb_lefted {
    text-align: left; }
  .tb_righted {
    text-align: right; }
  .tb_centered {
    text-align: center; }
  .tb_justifyed {
    text-align: justify; } }

@media (min-width: 1024px) {
  .ds_lefted {
    text-align: left; }
  .ds_righted {
    text-align: right; }
  .ds_centered {
    text-align: center; }
  .ds_justifyed {
    text-align: justify; } }

@media (min-width: 1440px) {
  .hd_lefted {
    text-align: left; }
  .hd_righted {
    text-align: right; }
  .hd_centered {
    text-align: center; }
  .hd_justifyed {
    text-align: justify; } }

@font-face {
  font-family: "myfont";
  src: url("fonts/myfont.eot?") format("eot"), url("fonts/myfont.woff2") format("woff2"), url("fonts/myfont.woff") format("woff"), url("fonts/myfont.ttf") format("truetype"), url("fonts/myfont.svg#myfont") format("svg"); }

@font-face {
  font-family: "themify";
  src: url("../fonts/themify/themify.eot");
  src: url("../fonts/themify/themify.eot?#iefix") format("eot"), url("../fonts/themify/themify.woff2") format("woff2"), url("../fonts/themify/themify.woff") format("woff"), url("../fonts/themify/themify.ttf") format("truetype"), url("../fonts/themify/themify.svg#themify") format("svg"); }

.themify:before {
  font-family: "themify";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  /* speak: none; only necessary if not using the private unicode range (firstGlyph option) */
  text-decoration: none;
  text-transform: none; }

.themify-angle-right:before {
  content: "\EA01"; }

.themify-bar-chart:before {
  content: "\EA02"; }

.themify-close:before {
  content: "\EA03"; }

.themify-comment-alt:before {
  content: "\EA04"; }

.themify-comments-smiley:before {
  content: "\EA05"; }

.themify-comments:before {
  content: "\EA06"; }

.themify-credit-card:before {
  content: "\EA07"; }

.themify-email:before {
  content: "\EA08"; }

.themify-gift:before {
  content: "\EA09"; }

.themify-headphone-alt:before {
  content: "\EA0A"; }

.themify-heart:before {
  content: "\EA0B"; }

.themify-layout-column3-alt:before {
  content: "\EA0C"; }

.themify-layout-grid2:before {
  content: "\EA0D"; }

.themify-layout-grid3-alt:before {
  content: "\EA0E"; }

.themify-menu:before {
  content: "\EA0F"; }

.themify-minus:before {
  content: "\EA10"; }

.themify-plus:before {
  content: "\EA11"; }

.themify-search:before {
  content: "\EA12"; }

.themify-shopping-cart-full:before {
  content: "\EA13"; }

.themify-shopping-cart:before {
  content: "\EA14"; }

.themify-split-v:before {
  content: "\EA15"; }

.themify-star:before {
  content: "\EA16"; }

.themify-truck:before {
  content: "\EA17"; }

.themify-user:before {
  content: "\EA18"; }

.themify-view-list:before {
  content: "\EA19"; }

/*
Move 
/font-awesome/css
/font-awesome/webfonts
to
/fonts/
*/
/*
 * .Base
 *
*/
/*
 * Variables
*/
/* Colors */
/* Fonts */
/* Borders */
/* Z-index */
/* Animation */
/*
Updt Z-index,
Add Animation,

*/
/*
 * hexagon( ширина, цвет бг, бордер-ширина, бордер-цвет ){}
*/
/*
DOCSS - Design-orientired CSS
 
Make your code like design with design terms like:
    Color scheme
    Typographic scheme
    Vertical rhytm
    Horizontal rhytm
    Height leveling
*/
/*
 * 1. pseudoelement_left_top()
 * 2. pseudoelement_right_top()
 * 3. flex()
 * 4. image_center_cover
 * 5. image_center_contain
 * 6. text_overflow
 * 7. bg_clip_text
 * 8. set_bg_adaptive
 * 0.
 */
/*
 * Display 'flex' - set justify and aligment,
 * add set flex-direction and flex-wrap
 * Call: // flex(space-between, center);
*/
/*
 * Centered image in container like CSS cover
 * Call: // image_center_cover();
*/
/*
 * Centered image in container like CSS contain
 * Call: // image_center_contain();
*/
/*
 * Overflow text in element
 * Call: // text_overflow();
*/
/*
 * Set background clip text
 * Call: // bg_clip_text();
*/
/*
 * Set adaptive bg-image
 * Call: // set_bg_adaptive('../images/section-main-bg', (768, 1200), 'jpg');
*/
/*
 * Set adaptive font-size
 * Call: // font_size('h3');  ||  font_size(h3);  - протетстить
*/
/*

Obj $devices 
->
Obj $font_size_names
->
function set_font_sizes()
->
mixin font_size_pro()

*/
@media (min-width: 320px) {
  .my_head {
    font-size: modular-scale(1, 15px, 1.1); } }

@media (min-width: 768px) {
  .my_head {
    font-size: modular-scale(1, 15px, 1.17); } }

/*
 * Extends
*/
/*
Mixin iphone() - render CSS iphone image
*/
/*
 * Base
*/
html {
  font-size: 14px;
  height: 100%; }

body {
  font-size: inherit;
  font-family: "Roboto", Verdana, Arial, sans-serif;
  height: 100%;
  margin: 0;
  font-weight: 300; }

* {
  box-sizing: border-box; }

a {
  text-decoration: none; }

ul, ol {
  margin: 0;
  padding: 0;
  list-style: none; }

h1, h2, h3, h4,
.h1, .h2, .h3, .h4 {
  margin: 0;
  line-height: 1.2em;
  font-family: "Roboto", Tahoma, Arial, sans-serif;
  font-weight: 400;
  color: #353437; }

h1, .h1 {
  font-size: 2.00534rem;
  letter-spacing: 0.05em; }

h2, .h2 {
  font-size: 1.68516rem; }

h3, .h3 {
  font-size: 1.4161rem; }

h4, .h4 {
  font-size: 1.19rem; }

p {
  margin-top: 0;
  margin-bottom: 1em;
  font-size: 1rem;
  line-height: 1.5em;
  font-weight: 300; }

img {
  display: block;
  max-width: 100%;
  width: 100%;
  height: auto; }

.themify:before,
.themify:after {
  vertical-align: middle;
  display: block; }

.section-component {
  margin: 3em 0; }

@media (min-width: 768px) {
  html {
    font-size: 16px; } }

/* media end*/
/* 0. General Vars, Mixins, Extends
 *
 *
*/
.collapse {
  padding-left: 0;
  padding-right: 0; }
  .collapse > .row {
    margin-left: 0;
    margin-right: 0; }
    .collapse > .row > [class*="mv"] {
      padding-left: 0;
      padding-right: 0; }

[class*=row].collapse {
  margin-left: 0;
  margin-right: 0; }
  [class*=row].collapse > [class*="mv"] {
    padding-left: 0;
    padding-right: 0; }

/* 1. Header
 * **********************************************************************
 *  
*/
.logo img {
  width: auto;
  max-width: 100%;
  height: auto; }

/* media end */
/* 2. Menu main
 * **********************************************************************
 *
*/
.menu-control {
  display: none; }

.menu-main li {
  display: inline-block; }
  .menu-main li:last-child {
    margin-right: 0; }
  .menu-main li a {
    display: block; }

/* 3. Slider
 * **********************************************************************
 *
*/
.slider-outer .slider,
.section-slider .slider {
  width: 100%;
  height: 100vh; }

.section-news {
  background-color: #ccc;
  background-position: center center;
  background-repeat: repeat-x;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  flex-wrap: wrap; }
  @media (max-width: 768px) {
    .section-news {
      background-image: url("../images/section-webinars-bg-768.jpg"); } }
  @media (min-width: 768px) and (max-width: 1200px) {
    .section-news {
      background-image: url("../images/section-webinars-bg-1200.jpg"); } }
  @media (min-width: 1200px) and (max-width: 1440px) {
    .section-news {
      background-image: url("../images/section-webinars-bg-1440.jpg"); } }
  @media (min-width: 1440px) {
    .section-news {
      background-image: url("../images/section-webinars-bg.jpg"); } }

/* . section-features
 * **********************************************************************
 *
*/
.section-features {
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(17, 12, 12, 0.9)), to(rgba(17, 12, 12, 0.9))), url(../images/section_features_bg.jpg) center center;
  background: linear-gradient(to top, rgba(17, 12, 12, 0.9) 0%, rgba(17, 12, 12, 0.9) 100%), url(../images/section_features_bg.jpg) center center;
  background-size: cover;
  display: block; }

.features .item {
  margin-bottom: 3.5rem; }
  .features .item .icon {
    position: relative; }
    .features .item .icon:after {
      display: none;
      content: "";
      position: absolute;
      right: 100%;
      top: 50%;
      width: 300px;
      height: 1px;
      background-color: #9b999e; }
    .features .item .icon.first:after {
      -webkit-transform: rotate(-15deg);
              transform: rotate(-15deg);
      -webkit-transform-origin: right center;
              transform-origin: right center; }
    .features .item .icon.last:after {
      -webkit-transform: rotate(15deg);
              transform: rotate(15deg);
      -webkit-transform-origin: right center;
              transform-origin: right center; }
    .features .item .icon svg {
      position: relative;
      z-index: 750;
      width: 3rem;
      height: 3rem;
      display: inline-block; }
  .features .item .content {
    padding-left: 2rem; }

@media (min-width: 768px) {
  .features .phone {
    position: relative;
    width: 100%;
    padding-bottom: 210%;
    background-color: #fff;
    border-radius: 8.57153%/4.08168%; }
    .features .phone .phone-inner {
      position: absolute;
      width: 100%;
      height: 100%;
      display: -webkit-box;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
              flex-direction: column; }
    .features .phone .phone-top {
      position: relative;
      display: -webkit-box;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
              flex-direction: column;
      -webkit-box-pack: center;
              justify-content: center;
      -webkit-box-align: center;
              align-items: center;
      width: 100%;
      height: 13.898305%; }
      .features .phone .phone-top .phone-dynamic {
        width: 18%;
        padding-bottom: 4.5%;
        /* 48px * 12px*/
        background-color: #f0f0f0;
        border-radius: 12.5%/50%;
        position: absolute;
        bottom: 37.037037%;
        -webkit-transform: translateY(50%);
                transform: translateY(50%); }
      .features .phone .phone-top .phone-camera {
        width: 4.5%;
        padding-bottom: 4.5%;
        background-color: #f0f0f0;
        border-radius: 50%;
        position: absolute;
        top: 37.037037%;
        -webkit-transform: translateY(-50%);
                transform: translateY(-50%); }
    .features .phone .phone-middle {
      width: 100%;
      height: 70.847458%;
      background: url("../images/phone_content.jpg") center center no-repeat;
      background-size: cover; }
    .features .phone .phone-bottom {
      position: relative;
      display: -webkit-box;
      display: flex;
      -webkit-box-pack: center;
              justify-content: center;
      width: 100%;
      height: 15.254237%; }
      .features .phone .phone-bottom .phone-micro {
        position: relative;
        width: 18%;
        /* 50px/280px */
        padding-bottom: 18%;
        background-color: #f0f0f0;
        border-radius: 50%;
        position: absolute;
        top: 50%;
        -webkit-transform: translate(0, -50%);
                transform: translate(0, -50%); }
        .features .phone .phone-bottom .phone-micro:after {
          content: "";
          position: absolute;
          left: 50%;
          top: 50%;
          -webkit-transform: translate(-50%, -50%);
                  transform: translate(-50%, -50%);
          width: 40%;
          height: 40%;
          background-color: #f0f0f0;
          border: 1px solid #fff;
          border-radius: 6px; } }

/* media end*/

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
